.\" Copyright (c) 2001-2003 The Open Group, All Rights Reserved 
.TH "expm1" P 2003 POSIX
.\" expm1 
.SH NAME
expm1, expm1f, expm1l - compute exponential functions
.SH SYNOPSIS
.LP
\fB#include <math.h>
.br
.sp
double expm1(double\fP \fIx\fP\fB);
.br
float expm1f(float\fP \fIx\fP\fB);
.br
long double expm1l(long double\fP \fIx\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
The functionality described on this reference page is aligned with
the ISO\0C standard. Any conflict between the
requirements described here and the ISO\0C standard is unintentional.
This volume of IEEE\0Std\01003.1-2001 defers to
the ISO\0C standard. 
.LP
These functions shall compute \fIe\fP-1.0.
.LP
An application wishing to check for error situations should set \fIerrno\fP
to zero and call
\fIfeclearexcept\fP(FE_ALL_EXCEPT) before calling these functions.
On return, if \fIerrno\fP is non-zero or
\fIfetestexcept\fP(FE_INVALID | FE_DIVBYZERO | FE_OVERFLOW | FE_UNDERFLOW)
is non-zero, an error has occurred.
.SH RETURN VALUE
.LP
Upon successful completion, these functions return \fIe**x\fP-1.0.
.LP
If the correct value would cause overflow, a range error shall occur
and \fIexpm1\fP(), \fIexpm1f\fP(), and \fIexpm1l\fP()
shall return the value of the macro HUGE_VAL, HUGE_VALF, and HUGE_VALL,
respectively.
.LP
If
\fIx\fP is NaN, a NaN shall be returned.
.LP
If \fIx\fP is \(+-0, \(+-0 shall be returned.
.LP
If \fIx\fP is -Inf, -1 shall be returned.
.LP
If \fIx\fP is +Inf, \fIx\fP shall be returned.
.LP
If \fIx\fP is subnormal, a range error may occur and \fIx\fP should
be returned. 
.SH ERRORS
.LP
These functions shall fail if:
.TP
Range\0Error
The result overflows. 
.LP
If the integer expression (math_errhandling & MATH_ERRNO) is non-zero,
then \fIerrno\fP shall be set to [ERANGE]. If the
integer expression (math_errhandling & MATH_ERREXCEPT) is non-zero,
then the overflow floating-point exception shall be
raised.
.sp
.LP
These functions may fail if:
.TP
Range\0Error
The value of \fIx\fP is subnormal. 
.LP
If the integer expression (math_errhandling & MATH_ERRNO) is non-zero,
then \fIerrno\fP shall be set to [ERANGE]. If the
integer expression (math_errhandling & MATH_ERREXCEPT) is non-zero,
then the underflow floating-point exception shall be
raised. 
.sp
.LP
\fIThe following sections are informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
The value of \fIexpm1\fP(\fIx\fP) may be more accurate than \fIexp\fP(\fIx\fP)-1.0
for small values of \fIx\fP.
.LP
The \fIexpm1\fP() and \fIlog1p\fP() functions are useful for financial
calculations of
((1+\fIx\fP)-1)/\fIx\fP, namely:
.sp
.RS
.nf

\fBexpm1(\fP\fIn\fP \fB* log1p(\fP\fIx\fP\fB))/\fP\fIx\fP
.fi
.RE
.LP
when \fIx\fP is very small (for example, when calculating small daily
interest rates). These functions also simplify writing
accurate inverse hyperbolic functions.
.LP
For IEEE\0Std\0754-1985 \fBdouble\fP, 709.8 < \fIx\fP implies \fIexpm1\fP(
\fIx\fP) has overflowed.
.LP
On error, the expressions (math_errhandling & MATH_ERRNO) and (math_errhandling
& MATH_ERREXCEPT) are independent of
each other, but at least one of them must be non-zero.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIexp\fP() , \fIfeclearexcept\fP() , \fIfetestexcept\fP() , \fIilogb\fP()
, \fIlog1p\fP() ,
the Base Definitions volume of IEEE\0Std\01003.1-2001, Section 4.18,
Treatment of Error Conditions for Mathematical Functions, \fI<math.h>\fP
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group. In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
