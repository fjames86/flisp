.\" Copyright 2001 Andries Brouwer <aeb@cwi.nl>.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.TH RINT 3  2001-05-31 "" "Linux Programmer's Manual"
.SH NAME
nearbyint, nearbyintf, nearbyintl, rint, rintf, rintl \- round to nearest integer
.SH SYNOPSIS
.nf
.B #include <math.h>
.sp
.BI "double nearbyint(double " x );
.br
.BI "float nearbyintf(float " x );
.br
.BI "long double nearbyintl(long double " x );
.sp
.BI "double rint(double " x );
.br
.BI "float rintf(float " x );
.br
.BI "long double rintl(long double " x );
.fi
.SH DESCRIPTION
The
.B nearbyint
functions round their argument to an integer value in floating point
format, using the current rounding direction and without raising the
.I inexact
exception.
.LP
The
.B rint
functions do the same, but will raise the
.I inexact
exception when the result differs in value from the argument.
.SH "RETURN VALUE"
The rounded integer value. If \fIx\fP is integral or infinite,
\fIx\fP itself is returned.
.SH ERRORS
No errors other than EDOM and ERANGE can occur.
If \fIx\fP is NaN, then NaN is returned and
.I errno
may be set to EDOM.
.SH NOTES
SUSv2 and POSIX 1003.1-2001 contain text about overflow (which might set
.I errno
to ERANGE, or raise an exception).
In practice, the result cannot overflow on any current machine,
so this error-handling stuff is just nonsense.
(More precisely, overflow can happen only when the maximum value
of the exponent is smaller than the number of mantissa bits.
For the IEEE-754 standard 32-bit and 64-bit floating point numbers
the maximum value of the exponent is 128 (resp. 1024), and the number
of mantissa bits is 24 (resp. 53).)
.SH "CONFORMING TO"
The
.B rint()
function conforms to BSD 4.3.
The other functions are from C99.
.SH "SEE ALSO"
.BR ceil (3),
.BR floor (3),
.BR lrint (3),
.BR nearbyint (3),
.BR round (3),
.BR trunc (3)
